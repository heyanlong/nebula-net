/**
 * Autogenerated by Thrift Compiler (0.15.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.Extensions.Logging;
using Thrift;
using Thrift.Collections;


#pragma warning disable IDE0079  // remove unnecessary pragmas
#pragma warning disable IDE1006  // parts of the code use IDL spelling
#pragma warning disable IDE0083  // pattern matching "that is not SomeType" requires net5.0 but we still support earlier versions

namespace Nebula.Storage
{
  public static class storageExtensions
  {
    public static bool Equals(this Dictionary<byte[], byte[]> instance, object that)
    {
      if (!(that is Dictionary<byte[], byte[]> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this Dictionary<byte[], byte[]> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static Dictionary<byte[], byte[]> DeepCopy(this Dictionary<byte[], byte[]> source)
    {
      if (source == null)
        return null;

      var tmp1321 = new Dictionary<byte[], byte[]>(source.Count);
      foreach (var pair in source)
        tmp1321.Add((pair.Key != null) ? pair.Key.ToArray() : null, (pair.Value != null) ? pair.Value.ToArray() : null);
      return tmp1321;
    }


    public static bool Equals(this Dictionary<byte[], global::Nebula.Common.@Value> instance, object that)
    {
      if (!(that is Dictionary<byte[], global::Nebula.Common.@Value> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this Dictionary<byte[], global::Nebula.Common.@Value> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static Dictionary<byte[], global::Nebula.Common.@Value> DeepCopy(this Dictionary<byte[], global::Nebula.Common.@Value> source)
    {
      if (source == null)
        return null;

      var tmp1322 = new Dictionary<byte[], global::Nebula.Common.@Value>(source.Count);
      foreach (var pair in source)
        tmp1322.Add((pair.Key != null) ? pair.Key.ToArray() : null, (pair.Value != null) ? pair.Value.DeepCopy() : null);
      return tmp1322;
    }


    public static bool Equals(this Dictionary<byte[], long> instance, object that)
    {
      if (!(that is Dictionary<byte[], long> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this Dictionary<byte[], long> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static Dictionary<byte[], long> DeepCopy(this Dictionary<byte[], long> source)
    {
      if (source == null)
        return null;

      var tmp1323 = new Dictionary<byte[], long>(source.Count);
      foreach (var pair in source)
        tmp1323.Add((pair.Key != null) ? pair.Key.ToArray() : null, pair.Value);
      return tmp1323;
    }


    public static bool Equals(this Dictionary<int, List<byte[]>> instance, object that)
    {
      if (!(that is Dictionary<int, List<byte[]>> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this Dictionary<int, List<byte[]>> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static Dictionary<int, List<byte[]>> DeepCopy(this Dictionary<int, List<byte[]>> source)
    {
      if (source == null)
        return null;

      var tmp1324 = new Dictionary<int, List<byte[]>>(source.Count);
      foreach (var pair in source)
        tmp1324.Add(pair.Key, (pair.Value != null) ? pair.Value.DeepCopy() : null);
      return tmp1324;
    }


    public static bool Equals(this Dictionary<int, List<global::Nebula.Common.@Value>> instance, object that)
    {
      if (!(that is Dictionary<int, List<global::Nebula.Common.@Value>> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this Dictionary<int, List<global::Nebula.Common.@Value>> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static Dictionary<int, List<global::Nebula.Common.@Value>> DeepCopy(this Dictionary<int, List<global::Nebula.Common.@Value>> source)
    {
      if (source == null)
        return null;

      var tmp1325 = new Dictionary<int, List<global::Nebula.Common.@Value>>(source.Count);
      foreach (var pair in source)
        tmp1325.Add(pair.Key, (pair.Value != null) ? pair.Value.DeepCopy() : null);
      return tmp1325;
    }


    public static bool Equals(this Dictionary<int, List<global::Nebula.Common.KeyValue>> instance, object that)
    {
      if (!(that is Dictionary<int, List<global::Nebula.Common.KeyValue>> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this Dictionary<int, List<global::Nebula.Common.KeyValue>> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static Dictionary<int, List<global::Nebula.Common.KeyValue>> DeepCopy(this Dictionary<int, List<global::Nebula.Common.KeyValue>> source)
    {
      if (source == null)
        return null;

      var tmp1326 = new Dictionary<int, List<global::Nebula.Common.KeyValue>>(source.Count);
      foreach (var pair in source)
        tmp1326.Add(pair.Key, (pair.Value != null) ? pair.Value.DeepCopy() : null);
      return tmp1326;
    }


    public static bool Equals(this Dictionary<int, List<global::Nebula.Common.Row>> instance, object that)
    {
      if (!(that is Dictionary<int, List<global::Nebula.Common.Row>> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this Dictionary<int, List<global::Nebula.Common.Row>> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static Dictionary<int, List<global::Nebula.Common.Row>> DeepCopy(this Dictionary<int, List<global::Nebula.Common.Row>> source)
    {
      if (source == null)
        return null;

      var tmp1327 = new Dictionary<int, List<global::Nebula.Common.Row>>(source.Count);
      foreach (var pair in source)
        tmp1327.Add(pair.Key, (pair.Value != null) ? pair.Value.DeepCopy() : null);
      return tmp1327;
    }


    public static bool Equals(this Dictionary<int, List<global::Nebula.Meta.Correlativity>> instance, object that)
    {
      if (!(that is Dictionary<int, List<global::Nebula.Meta.Correlativity>> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this Dictionary<int, List<global::Nebula.Meta.Correlativity>> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static Dictionary<int, List<global::Nebula.Meta.Correlativity>> DeepCopy(this Dictionary<int, List<global::Nebula.Meta.Correlativity>> source)
    {
      if (source == null)
        return null;

      var tmp1328 = new Dictionary<int, List<global::Nebula.Meta.Correlativity>>(source.Count);
      foreach (var pair in source)
        tmp1328.Add(pair.Key, (pair.Value != null) ? pair.Value.DeepCopy() : null);
      return tmp1328;
    }


    public static bool Equals(this Dictionary<int, List<global::Nebula.Storage.DelTags>> instance, object that)
    {
      if (!(that is Dictionary<int, List<global::Nebula.Storage.DelTags>> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this Dictionary<int, List<global::Nebula.Storage.DelTags>> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static Dictionary<int, List<global::Nebula.Storage.DelTags>> DeepCopy(this Dictionary<int, List<global::Nebula.Storage.DelTags>> source)
    {
      if (source == null)
        return null;

      var tmp1329 = new Dictionary<int, List<global::Nebula.Storage.DelTags>>(source.Count);
      foreach (var pair in source)
        tmp1329.Add(pair.Key, (pair.Value != null) ? pair.Value.DeepCopy() : null);
      return tmp1329;
    }


    public static bool Equals(this Dictionary<int, List<global::Nebula.Storage.EdgeKey>> instance, object that)
    {
      if (!(that is Dictionary<int, List<global::Nebula.Storage.EdgeKey>> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this Dictionary<int, List<global::Nebula.Storage.EdgeKey>> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static Dictionary<int, List<global::Nebula.Storage.EdgeKey>> DeepCopy(this Dictionary<int, List<global::Nebula.Storage.EdgeKey>> source)
    {
      if (source == null)
        return null;

      var tmp1330 = new Dictionary<int, List<global::Nebula.Storage.EdgeKey>>(source.Count);
      foreach (var pair in source)
        tmp1330.Add(pair.Key, (pair.Value != null) ? pair.Value.DeepCopy() : null);
      return tmp1330;
    }


    public static bool Equals(this Dictionary<int, List<global::Nebula.Storage.NewEdge>> instance, object that)
    {
      if (!(that is Dictionary<int, List<global::Nebula.Storage.NewEdge>> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this Dictionary<int, List<global::Nebula.Storage.NewEdge>> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static Dictionary<int, List<global::Nebula.Storage.NewEdge>> DeepCopy(this Dictionary<int, List<global::Nebula.Storage.NewEdge>> source)
    {
      if (source == null)
        return null;

      var tmp1331 = new Dictionary<int, List<global::Nebula.Storage.NewEdge>>(source.Count);
      foreach (var pair in source)
        tmp1331.Add(pair.Key, (pair.Value != null) ? pair.Value.DeepCopy() : null);
      return tmp1331;
    }


    public static bool Equals(this Dictionary<int, List<global::Nebula.Storage.NewVertex>> instance, object that)
    {
      if (!(that is Dictionary<int, List<global::Nebula.Storage.NewVertex>> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this Dictionary<int, List<global::Nebula.Storage.NewVertex>> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static Dictionary<int, List<global::Nebula.Storage.NewVertex>> DeepCopy(this Dictionary<int, List<global::Nebula.Storage.NewVertex>> source)
    {
      if (source == null)
        return null;

      var tmp1332 = new Dictionary<int, List<global::Nebula.Storage.NewVertex>>(source.Count);
      foreach (var pair in source)
        tmp1332.Add(pair.Key, (pair.Value != null) ? pair.Value.DeepCopy() : null);
      return tmp1332;
    }


    public static bool Equals(this Dictionary<int, List<int>> instance, object that)
    {
      if (!(that is Dictionary<int, List<int>> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this Dictionary<int, List<int>> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static Dictionary<int, List<int>> DeepCopy(this Dictionary<int, List<int>> source)
    {
      if (source == null)
        return null;

      var tmp1333 = new Dictionary<int, List<int>>(source.Count);
      foreach (var pair in source)
        tmp1333.Add(pair.Key, (pair.Value != null) ? pair.Value.DeepCopy() : null);
      return tmp1333;
    }


    public static bool Equals(this Dictionary<int, List<long>> instance, object that)
    {
      if (!(that is Dictionary<int, List<long>> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this Dictionary<int, List<long>> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static Dictionary<int, List<long>> DeepCopy(this Dictionary<int, List<long>> source)
    {
      if (source == null)
        return null;

      var tmp1334 = new Dictionary<int, List<long>>(source.Count);
      foreach (var pair in source)
        tmp1334.Add(pair.Key, (pair.Value != null) ? pair.Value.DeepCopy() : null);
      return tmp1334;
    }


    public static bool Equals(this Dictionary<int, global::Nebula.Common.LogInfo> instance, object that)
    {
      if (!(that is Dictionary<int, global::Nebula.Common.LogInfo> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this Dictionary<int, global::Nebula.Common.LogInfo> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static Dictionary<int, global::Nebula.Common.LogInfo> DeepCopy(this Dictionary<int, global::Nebula.Common.LogInfo> source)
    {
      if (source == null)
        return null;

      var tmp1335 = new Dictionary<int, global::Nebula.Common.LogInfo>(source.Count);
      foreach (var pair in source)
        tmp1335.Add(pair.Key, (pair.Value != null) ? pair.Value.DeepCopy() : null);
      return tmp1335;
    }


    public static bool Equals(this Dictionary<int, long> instance, object that)
    {
      if (!(that is Dictionary<int, long> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this Dictionary<int, long> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static Dictionary<int, long> DeepCopy(this Dictionary<int, long> source)
    {
      if (source == null)
        return null;

      var tmp1336 = new Dictionary<int, long>(source.Count);
      foreach (var pair in source)
        tmp1336.Add(pair.Key, pair.Value);
      return tmp1336;
    }


    public static bool Equals(this Dictionary<string, int> instance, object that)
    {
      if (!(that is Dictionary<string, int> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this Dictionary<string, int> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static Dictionary<string, int> DeepCopy(this Dictionary<string, int> source)
    {
      if (source == null)
        return null;

      var tmp1337 = new Dictionary<string, int>(source.Count);
      foreach (var pair in source)
        tmp1337.Add((pair.Key != null) ? pair.Key : null, pair.Value);
      return tmp1337;
    }


    public static bool Equals(this List<List<global::Nebula.Common.Coordinate>> instance, object that)
    {
      if (!(that is List<List<global::Nebula.Common.Coordinate>> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this List<List<global::Nebula.Common.Coordinate>> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static List<List<global::Nebula.Common.Coordinate>> DeepCopy(this List<List<global::Nebula.Common.Coordinate>> source)
    {
      if (source == null)
        return null;

      var tmp1338 = new List<List<global::Nebula.Common.Coordinate>>(source.Count);
      foreach (var elem in source)
        tmp1338.Add((elem != null) ? elem.DeepCopy() : null);
      return tmp1338;
    }


    public static bool Equals(this List<byte[]> instance, object that)
    {
      if (!(that is List<byte[]> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this List<byte[]> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static List<byte[]> DeepCopy(this List<byte[]> source)
    {
      if (source == null)
        return null;

      var tmp1339 = new List<byte[]>(source.Count);
      foreach (var elem in source)
        tmp1339.Add((elem != null) ? elem.ToArray() : null);
      return tmp1339;
    }


    public static bool Equals(this List<global::Nebula.Common.@Value> instance, object that)
    {
      if (!(that is List<global::Nebula.Common.@Value> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this List<global::Nebula.Common.@Value> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static List<global::Nebula.Common.@Value> DeepCopy(this List<global::Nebula.Common.@Value> source)
    {
      if (source == null)
        return null;

      var tmp1340 = new List<global::Nebula.Common.@Value>(source.Count);
      foreach (var elem in source)
        tmp1340.Add((elem != null) ? elem.DeepCopy() : null);
      return tmp1340;
    }


    public static bool Equals(this List<global::Nebula.Common.CheckpointInfo> instance, object that)
    {
      if (!(that is List<global::Nebula.Common.CheckpointInfo> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this List<global::Nebula.Common.CheckpointInfo> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static List<global::Nebula.Common.CheckpointInfo> DeepCopy(this List<global::Nebula.Common.CheckpointInfo> source)
    {
      if (source == null)
        return null;

      var tmp1341 = new List<global::Nebula.Common.CheckpointInfo>(source.Count);
      foreach (var elem in source)
        tmp1341.Add((elem != null) ? elem.DeepCopy() : null);
      return tmp1341;
    }


    public static bool Equals(this List<global::Nebula.Common.Coordinate> instance, object that)
    {
      if (!(that is List<global::Nebula.Common.Coordinate> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this List<global::Nebula.Common.Coordinate> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static List<global::Nebula.Common.Coordinate> DeepCopy(this List<global::Nebula.Common.Coordinate> source)
    {
      if (source == null)
        return null;

      var tmp1342 = new List<global::Nebula.Common.Coordinate>(source.Count);
      foreach (var elem in source)
        tmp1342.Add((elem != null) ? elem.DeepCopy() : null);
      return tmp1342;
    }


    public static bool Equals(this List<global::Nebula.Common.HostAddr> instance, object that)
    {
      if (!(that is List<global::Nebula.Common.HostAddr> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this List<global::Nebula.Common.HostAddr> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static List<global::Nebula.Common.HostAddr> DeepCopy(this List<global::Nebula.Common.HostAddr> source)
    {
      if (source == null)
        return null;

      var tmp1343 = new List<global::Nebula.Common.HostAddr>(source.Count);
      foreach (var elem in source)
        tmp1343.Add((elem != null) ? elem.DeepCopy() : null);
      return tmp1343;
    }


    public static bool Equals(this List<global::Nebula.Common.KeyValue> instance, object that)
    {
      if (!(that is List<global::Nebula.Common.KeyValue> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this List<global::Nebula.Common.KeyValue> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static List<global::Nebula.Common.KeyValue> DeepCopy(this List<global::Nebula.Common.KeyValue> source)
    {
      if (source == null)
        return null;

      var tmp1344 = new List<global::Nebula.Common.KeyValue>(source.Count);
      foreach (var elem in source)
        tmp1344.Add((elem != null) ? elem.DeepCopy() : null);
      return tmp1344;
    }


    public static bool Equals(this List<global::Nebula.Common.Row> instance, object that)
    {
      if (!(that is List<global::Nebula.Common.Row> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this List<global::Nebula.Common.Row> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static List<global::Nebula.Common.Row> DeepCopy(this List<global::Nebula.Common.Row> source)
    {
      if (source == null)
        return null;

      var tmp1345 = new List<global::Nebula.Common.Row>(source.Count);
      foreach (var elem in source)
        tmp1345.Add((elem != null) ? elem.DeepCopy() : null);
      return tmp1345;
    }


    public static bool Equals(this List<global::Nebula.Common.Step> instance, object that)
    {
      if (!(that is List<global::Nebula.Common.Step> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this List<global::Nebula.Common.Step> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static List<global::Nebula.Common.Step> DeepCopy(this List<global::Nebula.Common.Step> source)
    {
      if (source == null)
        return null;

      var tmp1346 = new List<global::Nebula.Common.Step>(source.Count);
      foreach (var elem in source)
        tmp1346.Add((elem != null) ? elem.DeepCopy() : null);
      return tmp1346;
    }


    public static bool Equals(this List<global::Nebula.Common.Tag> instance, object that)
    {
      if (!(that is List<global::Nebula.Common.Tag> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this List<global::Nebula.Common.Tag> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static List<global::Nebula.Common.Tag> DeepCopy(this List<global::Nebula.Common.Tag> source)
    {
      if (source == null)
        return null;

      var tmp1347 = new List<global::Nebula.Common.Tag>(source.Count);
      foreach (var elem in source)
        tmp1347.Add((elem != null) ? elem.DeepCopy() : null);
      return tmp1347;
    }


    public static bool Equals(this List<global::Nebula.Meta.Correlativity> instance, object that)
    {
      if (!(that is List<global::Nebula.Meta.Correlativity> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this List<global::Nebula.Meta.Correlativity> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static List<global::Nebula.Meta.Correlativity> DeepCopy(this List<global::Nebula.Meta.Correlativity> source)
    {
      if (source == null)
        return null;

      var tmp1348 = new List<global::Nebula.Meta.Correlativity>(source.Count);
      foreach (var elem in source)
        tmp1348.Add((elem != null) ? elem.DeepCopy() : null);
      return tmp1348;
    }


    public static bool Equals(this List<global::Nebula.Storage.@OrderBy> instance, object that)
    {
      if (!(that is List<global::Nebula.Storage.@OrderBy> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this List<global::Nebula.Storage.@OrderBy> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static List<global::Nebula.Storage.@OrderBy> DeepCopy(this List<global::Nebula.Storage.@OrderBy> source)
    {
      if (source == null)
        return null;

      var tmp1349 = new List<global::Nebula.Storage.@OrderBy>(source.Count);
      foreach (var elem in source)
        tmp1349.Add((elem != null) ? elem.DeepCopy() : null);
      return tmp1349;
    }


    public static bool Equals(this List<global::Nebula.Storage.DelTags> instance, object that)
    {
      if (!(that is List<global::Nebula.Storage.DelTags> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this List<global::Nebula.Storage.DelTags> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static List<global::Nebula.Storage.DelTags> DeepCopy(this List<global::Nebula.Storage.DelTags> source)
    {
      if (source == null)
        return null;

      var tmp1350 = new List<global::Nebula.Storage.DelTags>(source.Count);
      foreach (var elem in source)
        tmp1350.Add((elem != null) ? elem.DeepCopy() : null);
      return tmp1350;
    }


    public static bool Equals(this List<global::Nebula.Storage.EdgeKey> instance, object that)
    {
      if (!(that is List<global::Nebula.Storage.EdgeKey> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this List<global::Nebula.Storage.EdgeKey> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static List<global::Nebula.Storage.EdgeKey> DeepCopy(this List<global::Nebula.Storage.EdgeKey> source)
    {
      if (source == null)
        return null;

      var tmp1351 = new List<global::Nebula.Storage.EdgeKey>(source.Count);
      foreach (var elem in source)
        tmp1351.Add((elem != null) ? elem.DeepCopy() : null);
      return tmp1351;
    }


    public static bool Equals(this List<global::Nebula.Storage.EdgeProp> instance, object that)
    {
      if (!(that is List<global::Nebula.Storage.EdgeProp> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this List<global::Nebula.Storage.EdgeProp> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static List<global::Nebula.Storage.EdgeProp> DeepCopy(this List<global::Nebula.Storage.EdgeProp> source)
    {
      if (source == null)
        return null;

      var tmp1352 = new List<global::Nebula.Storage.EdgeProp>(source.Count);
      foreach (var elem in source)
        tmp1352.Add((elem != null) ? elem.DeepCopy() : null);
      return tmp1352;
    }


    public static bool Equals(this List<global::Nebula.Storage.Expr> instance, object that)
    {
      if (!(that is List<global::Nebula.Storage.Expr> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this List<global::Nebula.Storage.Expr> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static List<global::Nebula.Storage.Expr> DeepCopy(this List<global::Nebula.Storage.Expr> source)
    {
      if (source == null)
        return null;

      var tmp1353 = new List<global::Nebula.Storage.Expr>(source.Count);
      foreach (var elem in source)
        tmp1353.Add((elem != null) ? elem.DeepCopy() : null);
      return tmp1353;
    }


    public static bool Equals(this List<global::Nebula.Storage.IndexColumnHint> instance, object that)
    {
      if (!(that is List<global::Nebula.Storage.IndexColumnHint> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this List<global::Nebula.Storage.IndexColumnHint> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static List<global::Nebula.Storage.IndexColumnHint> DeepCopy(this List<global::Nebula.Storage.IndexColumnHint> source)
    {
      if (source == null)
        return null;

      var tmp1354 = new List<global::Nebula.Storage.IndexColumnHint>(source.Count);
      foreach (var elem in source)
        tmp1354.Add((elem != null) ? elem.DeepCopy() : null);
      return tmp1354;
    }


    public static bool Equals(this List<global::Nebula.Storage.IndexQueryContext> instance, object that)
    {
      if (!(that is List<global::Nebula.Storage.IndexQueryContext> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this List<global::Nebula.Storage.IndexQueryContext> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static List<global::Nebula.Storage.IndexQueryContext> DeepCopy(this List<global::Nebula.Storage.IndexQueryContext> source)
    {
      if (source == null)
        return null;

      var tmp1355 = new List<global::Nebula.Storage.IndexQueryContext>(source.Count);
      foreach (var elem in source)
        tmp1355.Add((elem != null) ? elem.DeepCopy() : null);
      return tmp1355;
    }


    public static bool Equals(this List<global::Nebula.Storage.NewEdge> instance, object that)
    {
      if (!(that is List<global::Nebula.Storage.NewEdge> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this List<global::Nebula.Storage.NewEdge> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static List<global::Nebula.Storage.NewEdge> DeepCopy(this List<global::Nebula.Storage.NewEdge> source)
    {
      if (source == null)
        return null;

      var tmp1356 = new List<global::Nebula.Storage.NewEdge>(source.Count);
      foreach (var elem in source)
        tmp1356.Add((elem != null) ? elem.DeepCopy() : null);
      return tmp1356;
    }


    public static bool Equals(this List<global::Nebula.Storage.NewTag> instance, object that)
    {
      if (!(that is List<global::Nebula.Storage.NewTag> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this List<global::Nebula.Storage.NewTag> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static List<global::Nebula.Storage.NewTag> DeepCopy(this List<global::Nebula.Storage.NewTag> source)
    {
      if (source == null)
        return null;

      var tmp1357 = new List<global::Nebula.Storage.NewTag>(source.Count);
      foreach (var elem in source)
        tmp1357.Add((elem != null) ? elem.DeepCopy() : null);
      return tmp1357;
    }


    public static bool Equals(this List<global::Nebula.Storage.NewVertex> instance, object that)
    {
      if (!(that is List<global::Nebula.Storage.NewVertex> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this List<global::Nebula.Storage.NewVertex> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static List<global::Nebula.Storage.NewVertex> DeepCopy(this List<global::Nebula.Storage.NewVertex> source)
    {
      if (source == null)
        return null;

      var tmp1358 = new List<global::Nebula.Storage.NewVertex>(source.Count);
      foreach (var elem in source)
        tmp1358.Add((elem != null) ? elem.DeepCopy() : null);
      return tmp1358;
    }


    public static bool Equals(this List<global::Nebula.Storage.PartitionResult> instance, object that)
    {
      if (!(that is List<global::Nebula.Storage.PartitionResult> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this List<global::Nebula.Storage.PartitionResult> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static List<global::Nebula.Storage.PartitionResult> DeepCopy(this List<global::Nebula.Storage.PartitionResult> source)
    {
      if (source == null)
        return null;

      var tmp1359 = new List<global::Nebula.Storage.PartitionResult>(source.Count);
      foreach (var elem in source)
        tmp1359.Add((elem != null) ? elem.DeepCopy() : null);
      return tmp1359;
    }


    public static bool Equals(this List<global::Nebula.Storage.StatProp> instance, object that)
    {
      if (!(that is List<global::Nebula.Storage.StatProp> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this List<global::Nebula.Storage.StatProp> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static List<global::Nebula.Storage.StatProp> DeepCopy(this List<global::Nebula.Storage.StatProp> source)
    {
      if (source == null)
        return null;

      var tmp1360 = new List<global::Nebula.Storage.StatProp>(source.Count);
      foreach (var elem in source)
        tmp1360.Add((elem != null) ? elem.DeepCopy() : null);
      return tmp1360;
    }


    public static bool Equals(this List<global::Nebula.Storage.UpdatedProp> instance, object that)
    {
      if (!(that is List<global::Nebula.Storage.UpdatedProp> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this List<global::Nebula.Storage.UpdatedProp> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static List<global::Nebula.Storage.UpdatedProp> DeepCopy(this List<global::Nebula.Storage.UpdatedProp> source)
    {
      if (source == null)
        return null;

      var tmp1361 = new List<global::Nebula.Storage.UpdatedProp>(source.Count);
      foreach (var elem in source)
        tmp1361.Add((elem != null) ? elem.DeepCopy() : null);
      return tmp1361;
    }


    public static bool Equals(this List<global::Nebula.Storage.VertexProp> instance, object that)
    {
      if (!(that is List<global::Nebula.Storage.VertexProp> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this List<global::Nebula.Storage.VertexProp> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static List<global::Nebula.Storage.VertexProp> DeepCopy(this List<global::Nebula.Storage.VertexProp> source)
    {
      if (source == null)
        return null;

      var tmp1362 = new List<global::Nebula.Storage.VertexProp>(source.Count);
      foreach (var elem in source)
        tmp1362.Add((elem != null) ? elem.DeepCopy() : null);
      return tmp1362;
    }


    public static bool Equals(this List<int> instance, object that)
    {
      if (!(that is List<int> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this List<int> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static List<int> DeepCopy(this List<int> source)
    {
      if (source == null)
        return null;

      var tmp1363 = new List<int>(source.Count);
      foreach (var elem in source)
        tmp1363.Add(elem);
      return tmp1363;
    }


    public static bool Equals(this List<long> instance, object that)
    {
      if (!(that is List<long> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this List<long> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static List<long> DeepCopy(this List<long> source)
    {
      if (source == null)
        return null;

      var tmp1364 = new List<long>(source.Count);
      foreach (var elem in source)
        tmp1364.Add(elem);
      return tmp1364;
    }


    public static bool Equals(this THashSet<global::Nebula.Common.@Value> instance, object that)
    {
      if (!(that is THashSet<global::Nebula.Common.@Value> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this THashSet<global::Nebula.Common.@Value> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static THashSet<global::Nebula.Common.@Value> DeepCopy(this THashSet<global::Nebula.Common.@Value> source)
    {
      if (source == null)
        return null;

      var tmp1365 = new THashSet<global::Nebula.Common.@Value>(source.Count);
      foreach (var elem in source)
        tmp1365.Add((elem != null) ? elem.DeepCopy() : null);
      return tmp1365;
    }


  }
}
